[{"type":"tab","id":"79568991.2ef1a","label":"Generic flow"},{"id":"8a2d0945.3b1bf","type":"subflow","name":"Get_Serial_ID","info":"Get a uniq ID for a card","in":[],"out":[{"x":942.6667165756226,"y":121.66663932800293,"wires":[{"id":"ca09788d.f2b46","port":0}]}]},{"id":"658488c8.3974e","type":"rfxtrx-port","z":"79568991.2ef1a","port":"/dev/ttyUSB0"},{"id":"e83be3ca.96fd58","type":"mqtt-broker","z":"79568991.2ef1a","broker":"172.31.19.166","port":"8883","clientid":"","usetls":true,"verifyservercert":false,"compatmode":true,"keepalive":"15","cleansession":true,"willTopic":"","willQos":"0","willRetain":"false","willPayload":"","birthTopic":"","birthQos":"0","birthRetain":"false","birthPayload":""},{"id":"af2a30fb.f3b978","type":"zwave-controller","z":"79568991.2ef1a","port":"/dev/ttyUSB21","driverattempts":"3","pollinterval":"500"},{"id":"97d1b310.0df288","type":"debug","z":"79568991.2ef1a","name":"","active":false,"console":"false","complete":"payload","x":2167.880859375,"y":44.928619384765625,"wires":[]},{"id":"670eb58.2f23fcc","type":"mqtt out","z":"79568991.2ef1a","name":"Rfxcom mqtt","topic":"rfxcom/sensor","qos":"1","retain":"true","broker":"e83be3ca.96fd58","x":2148.4764404296875,"y":325.92864990234375,"wires":[]},{"id":"8f04025.51d9f","type":"rfx-sensor","z":"79568991.2ef1a","name":"Recepteur RFX","port":"658488c8.3974e","topicSource":"all","topic":"","x":129.28578186035156,"y":246.21427536010742,"wires":[["42c7acf5.178a34"]]},{"id":"4b77d797.d437f8","type":"function","z":"79568991.2ef1a","name":"from sensor","func":"msg.prov=\"sensor\";\nreturn msg;","outputs":1,"noerr":0,"x":1740.8336181640625,"y":330.6667175292969,"wires":[["33327c46.a01604"]]},{"id":"33327c46.a01604","type":"function","z":"79568991.2ef1a","name":"wait id card and data from sensor","func":"context.data = context.data || new Object;\n\nswitch(msg.prov){\n    case \"id_card\":\n        context.global.id_card = msg.payload;\n        msg = null;\n        break;\n    case \"sensor\":\n        context.data.task2 = msg;                                                                                                                                                                                                                           \n        msg = null;\n        break;\n    default:\n        msg =null;\n}\n\nif(context.global.id_card != null && context.data.task2 != null){\n    msg2 = new Object();\n    msg2=context.data.task2;\n    msg2.payload.id_card=context.global.id_card;\n    context.data = null;\n    return msg2;\n}else return msg;","outputs":1,"noerr":0,"x":1917.6671142578125,"y":149.16668701171875,"wires":[["670eb58.2f23fcc","97d1b310.0df288"]]},{"id":"96966c9e.df655","type":"function","z":"8a2d0945.3b1bf","name":"check existing id_card in global context","func":"if(context.global.id_card != null){\n    return null;\n}\nelse{\n    return msg;\n}","outputs":1,"noerr":0,"x":325.71429443359375,"y":133.85713958740234,"wires":[["44decfce.0c7e5"]]},{"id":"44decfce.0c7e5","type":"exec","z":"8a2d0945.3b1bf","command":"python /home/pi/.node-red/getSerialId.py","addpay":true,"append":"","useSpawn":"","name":"get_id_card","x":617,"y":134,"wires":[["ca09788d.f2b46"],[],[]]},{"id":"ca09788d.f2b46","type":"function","z":"8a2d0945.3b1bf","name":"id_source","func":"msg.prov=\"id_card\";\nreturn msg;","outputs":1,"noerr":0,"x":809.3332366943359,"y":121.66667175292969,"wires":[[]]},{"id":"9db6d3fa.94ce48","type":"subflow:8a2d0945.3b1bf","z":"79568991.2ef1a","name":"","x":118.33334350585938,"y":139.40475463867188,"wires":[["33327c46.a01604"]]},{"id":"cfe99077.5abc88","type":"inject","z":"8a2d0945.3b1bf","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":true,"x":85.00000190734863,"y":133.8094620704651,"wires":[["96966c9e.df655"]]},{"id":"e09e1c94.eafa2","type":"comment","z":"79568991.2ef1a","name":"Commentaire sur le subflow","info":"Récupération d'un id unique pour la carte, ne se fait qu'une fois au lancement du flow","x":125,"y":90.11111450195312,"wires":[]},{"id":"107e119a.9037e6","type":"zwave-in","z":"79568991.2ef1a","name":"zw","controller":"af2a30fb.f3b978","x":101.83334350585938,"y":356.33331298828125,"wires":[["8af905c8.1f6a6","1a3ed6f.476a6a9"]]},{"id":"8af905c8.1f6a6","type":"debug","z":"79568991.2ef1a","name":"","active":true,"console":"false","complete":"true","x":251.50003051757812,"y":429.61114501953125,"wires":[]},{"id":"ffa01985.bbb288","type":"switch","z":"79568991.2ef1a","name":"check label","property":"label","propertyType":"msg","rules":[{"t":"eq","v":"Temperature","vt":"str"},{"t":"eq","v":"Burglar","vt":"str"},{"t":"else"}],"checkall":"false","outputs":3,"x":794.5238037109375,"y":355.59527587890625,"wires":[["cf688094.b68ff8"],["60a5853d.2e4954"],["73c04180.ddfaf8"]]},{"id":"cf688094.b68ff8","type":"function","z":"79568991.2ef1a","name":"F to C","func":"if(msg.payload[msg.label].units != 'C'){\n    fTempValold = parseInt(msg.payload[msg.label].oldValue);\n    fTempValcurrent = parseInt(msg.payload[msg.label].value);\n    \n    cTempValold = (fTempValold - 32.0) * (5.0 / 9.0);\n    cTempValcurrent = (fTempValcurrent - 32.0) * (5.0 / 9.0);\n    \n    cTempValold = +cTempValold.toFixed(1);\n    cTempValcurrent = +cTempValcurrent.toFixed(1);\n    msg.payload[msg.label].oldValue = cTempValold;\n    msg.payload[msg.label].value = cTempValcurrent;\n    msg.payload[msg.label].units = 'C';\n}\nreturn msg;","outputs":1,"noerr":0,"x":975.6667251586914,"y":298.00004482269287,"wires":[["4b77d797.d437f8"]]},{"id":"42c7acf5.178a34","type":"function","z":"79568991.2ef1a","name":"Get Sensor ID","func":"msg.payload['id']=msg.topic;\nmsg.payload['battery']=msg.status.battery;\nreturn msg;","outputs":1,"noerr":0,"x":1001.1666946411133,"y":251.0000295639038,"wires":[["4b77d797.d437f8"]]},{"id":"73c04180.ddfaf8","type":"function","z":"79568991.2ef1a","name":"String to Float","func":"msg.payload[msg.label].oldValue=parseFloat(msg.payload[msg.label].oldValue);\nmsg.payload[msg.label].value=parseFloat(msg.payload[msg.label].value);\nreturn msg;","outputs":1,"noerr":0,"x":1002.3334350585938,"y":413.3332977294922,"wires":[["4b77d797.d437f8"]]},{"id":"60a5853d.2e4954","type":"function","z":"79568991.2ef1a","name":"Motion","func":"msg.payload[msg.label].label='motion';\nmsg.payload.motion = msg.payload[msg.label];\ndelete msg.payload[msg.label];\nmsg.label='motion';\nmsg.payload[msg.label].value=1;\nreturn msg;","outputs":1,"noerr":0,"x":973.4167251586914,"y":355.33332443237305,"wires":[["4b77d797.d437f8","bac73064.24812"]]},{"id":"beaabd93.8827d","type":"function","z":"79568991.2ef1a","name":"Prepare payload for zwave","func":"msg2 = (JSON.parse(JSON.stringify(msg)));\nmsg2.payload = {};\nmsg2.payload[msg.payload.label] = msg.payload.value;\nmsg2.payload[msg.payload.label].oldValue = msg.payload.oldState;\nmsg2.payload.id=msg.payload.uuid;\nmsg2.label = msg.payload.label;\nreturn msg2;\n","outputs":1,"noerr":0,"x":521.666748046875,"y":355.1666259765625,"wires":[["ffa01985.bbb288"]]},{"id":"1a3ed6f.476a6a9","type":"switch","z":"79568991.2ef1a","name":"check topic","property":"topic","propertyType":"msg","rules":[{"t":"eq","v":"zwave: value changed","vt":"str"}],"checkall":"true","outputs":1,"x":293.7500305175781,"y":355.5951728820801,"wires":[["beaabd93.8827d"]]},{"id":"bac73064.24812","type":"function","z":"79568991.2ef1a","name":"trigger node","func":"units = \"min\"; duration = 10;\nif (units == \"s\") { duration = duration * 1000; }\nif (units == \"min\") { duration = duration * 1000 * 60; }\nif (units == \"hr\") { duration = duration * 1000 *60 * 60; }\n\ncontext.global.zwavenodes = context.global.zwavenodes || new Object();\n\nclearTimeout(context.global.zwavenodes[msg.payload[msg.label].node_id]);\ncontext.global.zwavenodes[msg.payload[msg.label].node_id] = setTimeout(function() {\n                        //msg.timer = context.global.zwavenodes[msg.payload[msg.label].node_id];\n                        node.send(msg);\n                        context.global.zwavenodes[msg.payload[msg.label].node_id] = null;\n                    },duration);\nreturn null;","outputs":1,"noerr":0,"x":1127.25,"y":534.3333740234375,"wires":[["b8ad8b0.431c078"]]},{"id":"86f35224.df29f","type":"debug","z":"79568991.2ef1a","name":"","active":false,"console":"false","complete":"true","x":1569.75,"y":534.6666259765625,"wires":[]},{"id":"b8ad8b0.431c078","type":"function","z":"79568991.2ef1a","name":"Change value for presence","func":"msg.payload[msg.label].value=0;\nreturn msg;","outputs":1,"noerr":0,"x":1335.33349609375,"y":534.6666870117188,"wires":[["86f35224.df29f","4b77d797.d437f8"]]},{"id":"7e93b3ff.6d7b74","type":"EnOceanIN","z":"79568991.2ef1a","name":"","x":291.99987030029297,"y":639.4999771118164,"wires":[["8e1bbcc.ac3d24","17aaf0ba.5fe8f7"],["17aaf0ba.5fe8f7"]]},{"id":"71ed6149.ee39a","type":"serial in","z":"79568991.2ef1a","x":108.5,"y":639.3889236450195,"wires":[["7e93b3ff.6d7b74"]]},{"id":"8e1bbcc.ac3d24","type":"function","z":"79568991.2ef1a","name":"Prepare message for database","func":"\nreturn msg;","outputs":1,"noerr":0,"x":1494.166259765625,"y":637.5,"wires":[["4b77d797.d437f8"]]},{"id":"17aaf0ba.5fe8f7","type":"debug","z":"79568991.2ef1a","name":"","active":true,"console":"false","complete":"false","x":447.5,"y":726.25,"wires":[]}]